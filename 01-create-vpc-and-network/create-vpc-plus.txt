$ aws ec2 create-vpc --cidr-block 172.10.0.0/16 --query Vpc.VpcId
     "vpc-0b6fbb9f95948bacd"
 
 
$ aws ec2 create-subnet --vpc-id vpc-0b6fbb9f95948bacd --cidr-block 172.10.1.0/24 --query Subnet.SubnetId
     "subnet-0ee4408826ef7998f"
 
 
$ aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId
     "igw-03489599074651c42"
 
$ aws ec2 attach-internet-gateway --vpc-id vpc-0b6fbb9f95948bacd --internet-gateway-id igw-03489599074651c42
 
 
$ aws ec2 create-route-table --vpc-id vpc-0b6fbb9f95948bacd --query RouteTable.RouteTableId
     "rtb-09bb5f04627947a4d"
 
 
$ aws ec2 create-route --route-table-id rtb-09bb5f04627947a4d --destination-cidr-block 0.0.0.0/0 --gateway-id igw-03489599074651c42
{
    "Return": true
}
 
 
$ aws ec2 associate-route-table --subnet-id subnet-0ee4408826ef7998f --route-table-id rtb-09bb5f04627947a4d
{
    "AssociationId": "rtbassoc-0db2c7f5ec8ec00bd",
    "AssociationState": {
        "State": "associated"
    }
}
 
 
$ aws ec2 create-security-group --group-name EC2SecurityGroup --description "SecGrp4Vpc-bacd" --vpc-id vpc-0b6fbb9f95948bacd
{
    "GroupId": "sg-0ea27d45353f3f0ef"
}
 
 
$ cat whatIsMyIp.txt
WhatIsMyIP.com
136.226.51.76
 
$ aws ec2 authorize-security-group-ingress --group-id sg-0ea27d45353f3f0ef --protocol tcp --port 22 --cidr 136.226.51.76/32
{
    "Return": true,
    "SecurityGroupRules": [
        {
            "SecurityGroupRuleId": "sgr-0c8b416864dcddc62",
            "GroupId": "sg-0ea27d45353f3f0ef",
            "GroupOwnerId": "639362923438",
            "IsEgress": false,
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIpv4": "136.226.51.76/32"
        }
    ]
}
 
 
$ aws ec2 create-key-pair --key-name SGKeyPair4bacd --query "KeyMaterial" --output text > SGKeyPair4bacd.pem
 
 
$ chmod 400 SGKeyPair4bacd.pem
 
 
$ aws ec2 run-instances --image-id ami-087c17d1fe0178315 --count 1 --instance-type t2.micro --key-name SGKeyPair4bacd  --security-group-ids sg-0ea27d45353f3f0ef --subnet-id subnet-0ee4408826ef7998f --associate-public-ip-address --tag-specifications ResourceType=instance,Tags=[{"Key=Name,Value=DrupalEC2"}]
{
    "Groups": [],
    "Instances": [
        {
            "AmiLaunchIndex": 0,
            "ImageId": "ami-087c17d1fe0178315",
            "InstanceId": "i-0d1bdc21498707959",
            "InstanceType": "t2.micro",
            "KeyName": "SGKeyPair4bacd",
            "LaunchTime": "2023-02-27T16:09:49+00:00",
            "Monitoring": {
                "State": "disabled"
            },
            "Placement": {
                "AvailabilityZone": "us-east-1a",
                "GroupName": "",
                "Tenancy": "default"
            },
            "PrivateDnsName": "ip-172-10-1-89.ec2.internal",
            "PrivateIpAddress": "172.10.1.89",
            "ProductCodes": [],
            "PublicDnsName": "",
            "State": {
                "Code": 0,
                "Name": "pending"
            },
            "StateTransitionReason": "",
            "SubnetId": "subnet-0ee4408826ef7998f",
            "VpcId": "vpc-0b6fbb9f95948bacd",
            "Architecture": "x86_64",
            "BlockDeviceMappings": [],
            "ClientToken": "0241184e-93fd-4c8d-a39c-13b125ca3772",
            "EbsOptimized": false,
            "EnaSupport": true,
            "Hypervisor": "xen",
            "NetworkInterfaces": [
                {
...
 
 
$ aws ec2 describe-instances --query "Reservations[*].Instances[*].{InstanceID:InstanceId,State:State.Name,Address:PublicIpAddress}" --filters Name=tag:Name,Values=DrupalEC2
[
    [
        {
            "InstanceID": "i-0d1bdc21498707959",
            "State": "running",
            "Address": "44.204.231.116"
        }
    ]
]
 
 
$ ssh -i "SGKeyPair4bacd.pem" ec2-user@44.204.231.116
The authenticity of host '44.204.231.116 (44.204.231.116)' can't be established.
ECDSA key fingerprint is SHA256:08A+tBzayGWz6VDedbVreeCBZ15Qd/8HE/YEdNLaFBI.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '44.204.231.116' (ECDSA) to the list of known hosts.
 
       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|
 
https://aws.amazon.com/amazon-linux-2/
51 package(s) needed for security, out of 99 available
Run "sudo yum update" to apply all updates.
[ec2-user@ip-172-10-1-89 ~]$